{"version":3,"sources":["MatchText.js","Home.js","Preferences.js","Settings.js","Message.js","Messages.js","NavBar.js","ChatMessages.js","ChatShowingNoMessages.js","ChatTenderUser.js","ChatMessagesDisplay.js","Chat.js","Description.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","isMatch","handleNewUser","history","use","useHistory","Container","Row","Col","xs","md","className","onClick","src","alt","span","offset","push","Home","randomUser","newUser","onSelectUser","useState","setIsMatch","isDecided","setIsDecided","useEffect","handleMatch","random","Math","round","undefined","name","picture","large","first","dob","age","Preferences","settings","onChange","Radio","toggle","checked","female","male","Settings","classname","smoker","vegetarian","single","user","location","thumbnail","last","pathname","message","substring","date","Messages","this","props","randomUsers","map","key","Component","NavBar","toggleCollapse","collapseID","setState","prevState","clickLogo","state","color","light","fixed","href","style","width","id","isOpen","navbar","left","exact","to","ChatMessage","sentMessages","myRef","useRef","ref","document","getElementById","scrollTo","current","offsetTop","sm","index","ChatShowingNoMessages","ChatTenderUser","ChatMessagesDisplay","Chat","showCurrentlyTyping","e","userMessage","target","value","sendMessageNow","preventDefault","prevProps","type","rows","Description","valueChucknorris","description","userName","match","replace","changeName","contact","LinkedIn","GitHub","ourselves","App","getGenderSelection","getUser","fetch","then","response","json","chuckAPI","url","res","randomUserAPI","selectedUser","results","getUsers","data","usersWithMessages","item","faker","lorem","sentences","handleChangeSetting","settingName","handleSelectUser","clickedUser","nextRoute","path","render","Boolean","window","hostname","ReactDOM","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f28a488.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MatchText.css\";\nimport './Home.css';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst MatchText = ({isMatch, handleNewUser, use}) => {\n\n    let history = useHistory ()\n\n    const handleRedirectToChat = () => {\n        history.push(\"/chat\");\n        handleNewUser()\n    }\n\n    if(isMatch){\n        return (\n            <Container>\n                <Row>\n                    <Col xs={12} md={12}>\n                        <div className=\"noMatch\">\n                            <p className=\"text-center name\"> Sorry, they don't like you back. Better luck next time. </p>                   \n                        </div>\n                        <p className=\"left searching\" onClick={handleNewUser}> Keep searching</p>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    } else{\n        return (\n            <Container>\n            <Row>\n                <Col xs={12} md={12}>\n                    <div className=\"noMatch\">\n                        <p className=\"text-center name\"> They like you back  <img\n                        className=\"matchText-tenderLogo\" \n                         src=\"https://res.cloudinary.com/ddoc8nfxb/image/upload/v1573925533/ff7854heart_mhabmy.png\" alt=\"Tender Logo\">\n                    </img> </p>                   \n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={{ span: 12}} md={{ span: 6, offset: 3 }}>\n                    <div className=\"d-flex justify-content-center align-items-center married\">\n                        <p className=\"left searching\" onClick={handleRedirectToChat}> Send them a message </p> \n                        <p className=\"left searching\" onClick={handleNewUser}> Keep searching</p>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n        )\n    }  \n\n}\n\nexport default withRouter (MatchText); ","import React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport MatchText from './MatchText';\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Home = ({ randomUser, newUser, onSelectUser }) => {\n\n    const [isMatch, setIsMatch] = useState(false)\n    const [isDecided, setIsDecided] = useState(false)\n\n    const handleNewUser = () => {\n        newUser();\n        setIsDecided(false);\n    }\n\n    useEffect (() => {\n        setIsDecided(false);\n    }, [randomUser])\n\n    const handleMatch = () => {\n        const random = Math.round(Math.random());\n        setIsMatch(!!random);\n        setIsDecided(true);\n    }\n\n    const handleClassName = () => {\n        if (isDecided) {\n            if (isMatch) {\n                return \"mainImage-transparent\"\n            } else {\n                return \"mainImage-bright\"\n            }\n        } else {\n            return \"mainImage\"\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"homeCentered\">\n                <Container>\n\n                    {\n                        randomUser.name !== undefined &&\n                        <Row>\n                            <Col xs={12} md={12}>\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <div className=\"arrow left\">\n                                        <i className={isDecided ? \"off-buttons\" : \"fas fa-chevron-left d-xl-none\"} onClick={handleNewUser}></i>\n                                        <p className={isDecided ? \"off-buttons\" : \"left d-none d-xl-block\"} onClick={handleNewUser}> <sub className=\"rose\"></sub> Next!!! <sub className=\"rose\"></sub></p>\n                                    </div>\n                                    <img className={handleClassName()} onClick={() => onSelectUser(randomUser, '/profile')} src={randomUser.picture.large} alt=\"Tender user\" />\n                                    <div className=\"arrow\">\n                                        <i className={isDecided ? \"off-buttons\" : \"fas fa-chevron-right d-xl-none\"} onClick={handleMatch}></i>\n                                        <p className={isDecided ? \"off-buttons\" : \"right d-none d-xl-block\"} onClick={handleMatch}>Marry me!</p>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    }\n                    <Row>\n                        <Col xs={12} md={12}>\n                            <div className={isDecided ? \"off-buttons\" : \"text-center name\"}>\n                                <p> {randomUser.name.first}, {randomUser.dob.age} y.o. </p>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    {isDecided &&\n                        <MatchText isMatch={isMatch} handleNewUser={handleNewUser} isDecided={isDecided} />\n                    }\n                </Container>\n            </div>\n        </>\n    )\n}\n\n// The settings props are passed from the parent component (App.js) with \"const Home = ({ randomUser, newUser, chuckNorrisQuote, settings }) => {\" and then they\n// are passed to its child component through the part \"settings={settings}\" in \"<Description chuckNorrisQuote={chuckNorrisQuote} settings={settings} />\"\n\nexport default Home; ","import React from 'react'; \nimport { Radio } from 'semantic-ui-react';\nimport './Settings.css';\nimport './Preferences.css';\n\nconst Preferences = ({settings, onChange}) => (\n    <>\n        <div className=\"first-setting\">\n            <p className=\"settingsItem\">\n                Female:\n            </p>\n            <span>\n                <Radio toggle checked={settings.female} onChange={() => onChange('female')}/>\n            </span>\n        </div>\n        <div className=\"border\">\n        </div>\n        <div className=\"setting\">\n            <p className=\"settingsItem\">\n                Male:\n            </p> <span><Radio toggle checked={settings.male} onChange={() => onChange('male')}/></span>\n        </div>\n    </>\n);\n\nexport default Preferences; ","import React from 'react';\nimport './Settings.css';\nimport Preferences from './Preferences';\nimport { Radio } from 'semantic-ui-react';\n\nconst Settings = ({ settings, onChange }) => {\n    return (\n        <div className=\"settings-container\">\n            <div className=\"looking-for\">\n                <p classname=\"settingsTitle\">\n                    I'm looking for...\n                </p>\n            </div>\n            <Preferences settings={settings} onChange={onChange}/>\n            <div className=\"setting\">\n                <p className=\"settingsItem\">\n                    Smoker:\n                </p>\n                <span>\n                    <Radio toggle checked={settings.smoker} onChange={() => onChange('smoker')}/>\n                </span>\n            </div>\n            <div className=\"setting\">\n                <p className=\"settingsItem\">\n                    Vegetarian:\n                </p>\n                <span>\n                    <Radio toggle checked={settings.vegetarian} onChange={() => onChange('vegetarian')}/>\n                </span>\n            </div>\n            <div className=\"last-setting\">\n                <p className=\"settingsItem\">\n                    Single:\n                </p>\n                <span>\n                    <Radio toggle checked={settings.single} onChange={() => onChange('single')}/>\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings; ","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Message.css';\n\nconst Message = ({ user, location, onSelectUser }) => {\n    const formatMessage = () => {\n\n        if (location.pathname === '/messages') {\n            return `${user.message.substring(0, 130)}...`\n        }\n        else {\n            return `${user.message.substring(0, 15)}...`\n        }\n    }\n\n    return (\n\n        <div className=\"message\">\n            <div className=\"message-pict\" onClick={() => onSelectUser(user, 'profile')}>\n                <img src={user.picture.thumbnail} alt=\"Tender user\" className=\"avatar\" />\n            </div>\n            <div className='message-name' onClick={() => onSelectUser(user, 'profile')}>\n                {user.name.first} {user.name.last}\n            </div>\n            <div className=\"message-content\" onClick={() => onSelectUser(user, 'chat')}>\n                {formatMessage()}\n            </div>\n            <div className=\"message-date\">\n                {user.date ? user.date : \"29 oct.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Message);","\nimport Message from './Message';\nimport React, { Component } from 'react';\nimport './Message.css';\n\nclass Messages extends Component {\n    render() {\n        const { randomUsers, onSelectUser } = this.props\n        return (\n            <div className=\"msg\">\n                {\n                    randomUsers.map(user => {\n                        return (\n                            <Message\n                                user={user}\n                                key={user.name.first}\n                                onSelectUser={onSelectUser}\n                            />\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n\nexport default Messages; ","import React, { Component } from 'react';\nimport { MDBNavbar, NavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, NavbarBrand }\n  from 'mdbreact';\nimport './NavBar.css';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapseID: ''\n    }\n  }\n\n  toggleCollapse = collapseID => () => {\n    this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\n  }\n\n  clickLogo = () => {\n    this.props.newUser();\n    this.setState({ collapseID: '' })\n  }\n\n  render() {\n    return (\n      <div>\n        <main>\n          <MDBNavbar className=\"navBarCustom\" color=\"light-blue lighten-3\" light fixed=\"top\">\n            <NavbarBrand className=\"nav-size\" href=\"/Tender\" onClick={this.clickLogo}>\n              <img className=\"logo-tender\" src={\"https://res.cloudinary.com/ddoc8nfxb/image/upload/v1574074799/ffffffheart_fhfafu.png\"} style={{ width: 50 }} alt=\"Tender Logo\" />\n              <span className=\"app-name\">Tender</span></NavbarBrand>\n            <div className=\"navbar-ic\">\n              <MDBNavbarToggler className=\"navbar-icon\" onClick={this.toggleCollapse('navbarCollapse1')} />\n            </div>\n            <MDBCollapse id=\"navbarCollapse1\" isOpen={this.state.collapseID} navbar>\n              <NavbarNav left>\n                <MDBNavItem>\n                  <MDBNavLink onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/\"> <span className=\"link-menu\">Home</span></MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  <MDBNavLink onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/settings\"><span className=\"link-menu\">Settings</span></MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  <MDBNavLink onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/messages\"><span className=\"link-menu\">Messages</span></MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  <MDBNavLink onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/chat\"><span className=\"link-menu\">Chat</span></MDBNavLink>\n                </MDBNavItem>\n              </NavbarNav>\n            </MDBCollapse>\n\n          </MDBNavbar>\n        </main>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default NavBar; \n","import React, { useRef, useEffect} from \"react\"\nimport \"./ChatMessages.css\"\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst scrollToRef = (ref) =>\n    document.getElementById('chat-spaceForMessagesScroll-scrollable').scrollTo(0, ref.current.offsetTop);  \n\nconst ChatMessage = ({sentMessages}) => {\n    \n    const myRef = useRef(null)\n    \n    useEffect(() => {\n        scrollToRef(myRef)\n    }, [sentMessages])\n        \n    return(\n        <Container>\n            <Row className={\"sentMessagesRow\"}>\n                <Col md={{ span: 4, offset: 8 }} sm={{ span: 5, offset: 7 }} xs={{ span: 8, offset: 4 }} >\n                    {\n                        sentMessages.map ((message, index) => (\n                            <div className=\"chatMessages-eachMessage\" key={index}>\n                                <div className=\"chatMessages-newMessage\">\n                                    <p> {message} </p>\n                                </div>\n                                <div className=\"chatMessages-spaceBetweenMessages\"></div>\n                            </div>\n                        ))\n                    }\n                    <div ref={myRef}></div>\n                </Col>\n            </Row>\n        </Container>\n\n)\n}\nexport default ChatMessage; ","import React from \"react\";\nimport \"./ChatShowingNoMessages.css\"\n\nconst ChatShowingNoMessages = () => {\n\nreturn(\n    <div className=\"chat-noMessages\">\n        <img\n        className=\"tenderLogo\" \n        src=\"https://res.cloudinary.com/ddoc8nfxb/image/upload/v1574167393/FE5963heart_t8shrn.png\" alt=\"Tender Logo\"></img>\n        <h1> Go ahead, send them a message. <br/> Don't be shy! </h1>\n\n    </div>\n)\n}\nexport default ChatShowingNoMessages; ","import React from \"react\"\nimport \"./ChatTenderUser.css\"\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n\nconst ChatTenderUser = ({user}) => {\n\nreturn(\n    <Container>\n        <Row className={\"tenderUserMessage-Row\"}>\n        <Col  md={4} sm={5} xs={8} >\n                    <div>\n                        <div className=\" tenderUserMessage\">\n                            <p> {user.message} </p>\n                        </div>\n                        <div className=\"tenderUserMessage-spaceBetween\"></div>\n                    </div>\n            </Col>\n        </Row>\n    </Container>\n\n)\n}\nexport default ChatTenderUser; ","import React from \"react\";\nimport ChatMessages from \"./ChatMessages\"; \nimport ChatShowingNoMessages from \"./ChatShowingNoMessages\";\nimport ChatTenderUser from \"./ChatTenderUser\";\n\nconst ChatMessagesDisplay = ({sentMessages, user}) => {\n    \n    if(user.message){ \n        return (\n            <>\n                <ChatTenderUser user={user}/>\n                <ChatMessages sentMessages={sentMessages}/>\n            </>\n        )\n    }else if\n    (sentMessages[0]){\n        return <ChatMessages sentMessages={sentMessages}/> \n    }else{\n        return <ChatShowingNoMessages/>\n    }\n}\n\nexport default ChatMessagesDisplay; ","import React, { Component } from 'react';\nimport './Chat.css';\nimport Messages from \"./Messages\";\nimport ChatMessagesDisplay from \"./ChatMessagesDisplay\"\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userMessage: \"\",\n      sentMessages: [],\n    };\n  }\n\n  showCurrentlyTyping = e => {\n    this.setState({ userMessage: e.target.value });\n  }\n\n  sendMessageNow = e => {\n    e.preventDefault();\n    if (this.state.userMessage) {\n      this.setState((state) => {\n        return {\n          ...state,\n          sentMessages: [...state.sentMessages, [state.userMessage,  ]],\n          userMessage: \"\",\n        }\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n      if(this.props.user !== prevProps.user){\n        this.setState({ sentMessages: [] })\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"chat\">\n      \n        <div className=\"chat-contacts\">\n          <Messages \n            randomUsers={this.props.randomUsers} \n            onSelectUser={this.props.onSelectUser} \n          />\n        </div>\n          <div className=\"chat-spaceForMessages\">\n          <div className=\"chat-spaceForMessagesScroll\" id=\"chat-spaceForMessagesScroll-scrollable\">\n            <ChatMessagesDisplay \n              sentMessages={this.state.sentMessages} \n              user={this.props.user}\n            />\n          </div>\n\n          <form className=\"chat-chatForm\">\n            <input\n              type=\"text\"\n              className=\"chat-textArea\"\n              rows=\"2\"\n              value={this.state.userMessage}\n              onChange={this.showCurrentlyTyping} />\n            <input\n              type=\"submit\"\n              className=\"chat-sendButton\"\n              value=\"Send\"\n              onClick={this.sendMessageNow} />\n          </form>\n        </div>\n       </div>\n\n    );\n  }\n}\n\nexport default Chat;","import React, { Component } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport './Profile.css';\n\n\nconst Description = ({ user, settings }) => {\n\n    const changeName = () => {\n        const valueChucknorris = user.description;\n        let userName = user.name.first;\n        if (valueChucknorris.match(/chuck norris/gi)) {\n            return valueChucknorris.replace(/chuck norris/gi, userName);\n        }\n        return user.description\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col md={12} xs={12}>\n                    <div className=\"profile-name profile-container\">\n                        <div className=\"description\">\n                            <span>{user.name.first} {user.name.last}</span><br /><span>{user.dob.age} y.o.</span>\n                            <br /><h4 className=\"profile-quote\"> {changeName()}</h4>\n                        </div>\n                    </div>\n\n                    {\n                        (user.name.first !== \"Angélina\" && user.name.first !== \"Inês\" && user.name.first !== \"Elena\" && user.name.first !== \"Alexandra\") &&\n                        <div className=\"profile-settings\">\n\n                            <p>{settings.smoker ? \"-Smoker-\" : \"-Non smoker-\"}</p>\n                            <p>{settings.vegetarian ? \"-Vegetarian-\" : \"-Carnivorous-\"}</p>\n                            <p>{settings.single ? \"-Single-\" : \"-Married-\"}</p>\n                        </div>\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Description;","import React from 'react';\nimport './Profile.css';\nimport Description from './Description';\nimport { withRouter, useHistory } from \"react-router-dom\";\n\n\n\nconst Profile = ({ user, settings }) => {\n    let history = useHistory()\n\n    const handleRedirectToChat = () => {\n        history.push(\"/chat\");\n    }\n\n    return (\n        <div className=\"profile-container\">\n            <div className=\"profile-pict\">\n                <img src={user.picture.large} alt=\"Tender user\" className=\"pict\" />\n            </div>\n            <div className=\"description-container\">\n                <div className=\"profile-description-size\">\n                    <Description user={user} settings={settings} />\n                </div>\n                <div className=\"profile-social-links\">\n                    {(user.name.first === \"Angélina\" || user.name.first === \"Alexandra\" || user.name.first === \"Inês\" || user.name.first === \"Elena\") &&\n\n                        <div className=\"social-links\">\n                            <div>\n                                <a href={user.contact.LinkedIn} className=\"social-link\">\n                                    <i className=\"fab fa-linkedin-in \"></i>\n                                </a>\n                            </div>\n                            <div>\n                                <a href={user.contact.GitHub} className=\"social-link\">\n                                    <i className=\"fab fa-github\"></i>\n                                </a>\n                            </div>\n                        </div>\n                    }\n                </div>\n                <div className=\"chat-btn profile-container\">\n                    <button className=\"chatBtn-style\" onClick={handleRedirectToChat}>Chat\n                </button>\n                </div>\n            </div>\n        </div>\n\n    )\n\n\n}\n\n\nexport default withRouter(Profile); ","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\nimport Settings from './Settings';\nimport Messages from './Messages';\nimport NavBar from './NavBar';\nimport Chat from './Chat';\nimport Profile from './Profile';\nimport { withRouter } from \"react-router-dom\";\nimport faker from 'faker';\n\n\nconst ourselves = [\n  {\n    name: {\n      first: 'Alexandra',\n      last: 'Santos',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/EkLnHof.jpg',\n      large: 'https://i.imgur.com/fKVgPRR.jpg',\n    },\n    message: 'Hey handsome! How are you?',\n    date: '5 nov.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/alexandrapatriciosantos/',\n      GitHub: 'https://github.com/alexandrapatriciosantos',\n    },\n    description: \"I like long walks on the beach, MDN web docs, and proper indentation. Dislikes: infinite loops, \\\"failed to render\\\" messages, and coding in the master branch.\",\n    dob: {\n      age: 25\n    }\n  },\n  {\n    name: {\n      first: 'Angélina',\n      last: 'Riet',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/t4iBPv7.jpg',\n      large: 'https://i.imgur.com/knxzOV6.jpg',\n    },\n    message: 'Voulez-vous coucher avec moi ce soir? ;)',\n    date: '31 oct.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/angelinariet/',\n      GitHub: 'https://github.com/AngelinaRIET',\n    },\n    description: 'Autodidacte passionnée par l’informatique puis formée à la Wild Code School de Lisbonne, je suis à la recherche d’un stage sur Paris en développement web / mobile - React JS / React Native.',\n    dob: {\n      age: 28\n    }\n  },\n  {\n    name: {\n      first: 'Inês',\n      last: 'Oliveira',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/v7zP5R8.jpg',\n      large: 'https://i.imgur.com/Brhn4Tn.jpg',\n    },\n    message: \"You make my booleans come true!!\",\n    date: '4 nov.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/inesfpoliveira/',\n      GitHub: 'https://github.com/inespisca',\n    },\n    description: 'blablabla',\n    dob: {\n      age: 26\n    }\n  },\n  {\n    name: {\n      first: 'Elena',\n      last: 'Ortega',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/p9fIRKM.jpg',\n      large: 'https://i.imgur.com/wuUXt6P.jpg',\n    },\n    message: 'Holà que tal',\n    date: '3 nov.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/elenaortegabaura/',\n      GitHub: 'https://github.com/eobwebdevelop',\n    },\n    description: 'blablabla',\n    dob: {\n      age: 28\n    }\n  },\n\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedUser: {\n        picture: {},\n        name: {},\n        dob: {},\n        description: ''\n\n      },\n      randomUsers: [],\n      settings: {\n        smoker: false,\n        vegetarian: false,\n        single: false,\n        female: true,\n        male: true\n\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.getUsers();\n\n  }\n\n  getGenderSelection = () => {\n    if (this.state.settings.female === true && this.state.settings.male === false) {\n      return '&gender=female'\n    } else if (this.state.settings.female === false && this.state.settings.male === true) {\n      return '&gender=male'\n    } else {\n      return ''\n    }\n  }\n\n  getUser = () => {\n    //get quote at the same time as a new user\n    fetch(\"https://api.chucknorris.io/jokes/random\")\n      .then(response => response.json())\n      .then(chuckAPI => {\n        const url = `https://randomuser.me/api/?inc=gender,name,dob,picture${this.getGenderSelection()}`;\n        fetch(url)\n          .then(res => res.json())\n          .then(randomUserAPI => {\n            this.setState({\n              selectedUser: { ...randomUserAPI.results[0], description: chuckAPI.value },\n            })\n          })\n      })\n  }\n\n  getUsers = () => {\n    fetch(\"https://randomuser.me/api/?results=10\")\n      .then(response => response.json())\n      .then(data => {\n        const usersWithMessages = data.results.map((item) => {\n          const fakerMessage = faker.lorem.sentences();\n          const fakerDescription = faker.lorem.sentences();\n          return { ...item, message: fakerMessage, description: fakerDescription };\n        })\n        this.setState({\n          randomUsers: [...ourselves, ...usersWithMessages],\n        })\n      }\n      )\n  }\n\n  handleChangeSetting = (settingName) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          [settingName]: !state.settings[settingName],\n        }\n      }\n    })\n  };\n\n  handleSelectUser = (clickedUser, nextRoute) => {\n    this.setState({ selectedUser: clickedUser }, () => {\n      if (nextRoute) {\n        this.props.history.push(nextRoute);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar \n          newUser={this.getUser}\n        />\n        <Switch>\n          <Route exact path=\"\" render={() =>\n            <Home\n              randomUser={this.state.selectedUser}\n              user={this.state.selectedUser}\n              onSelectUser={this.handleSelectUser}\n              newUser={this.getUser}\n              settings={this.state.settings} />}\n          />\n          <Route exact path=\"/settings\" render={() =>\n            <Settings\n              settings={this.state.settings}\n              onChange={this.handleChangeSetting} />}\n          />\n          <Route exact path=\"/messages\" render={() =>\n            <Messages\n              randomUsers={this.state.randomUsers}\n              onSelectUser={this.handleSelectUser} />}\n          />\n          <Route exact path=\"/chat\" render={() =>\n            <Chat\n              randomUsers={this.state.randomUsers}\n              user={this.state.selectedUser}\n              onSelectUser={this.handleSelectUser} />}\n          />\n          <Route exact path=\"/profile\" render={() =>\n            <Profile\n              user={this.state.selectedUser}\n              settings={this.state.settings} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/Tender\">\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}