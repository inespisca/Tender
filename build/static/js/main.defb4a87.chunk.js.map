{"version":3,"sources":["Description.js","MatchText.js","Home.js","Preferences.js","Settings.js","Message.js","Messages.js","NavBar.js","ChatMessages.js","ChatShowingNoMessages.js","ChatTenderUser.js","ChatMessagesDisplay.js","Chat.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["Description","user","settings","Container","Row","Col","md","xs","className","name","first","last","dob","age","valueChucknorris","description","userName","includes","replace","changeName","smoker","vegetarian","single","withRouter","isMatch","handleNewUser","history","useHistory","onClick","src","alt","push","Home","randomUser","newUser","onSelectUser","useState","setIsMatch","isDecided","setIsDecided","handleMatch","random","Math","round","fluid","undefined","picture","large","Preferences","onChange","Radio","toggle","checked","female","male","Settings","classname","location","thumbnail","pathname","message","substring","date","Messages","this","props","randomUsers","map","key","Component","NavBar","state","collapseID","toggleCollapse","setState","prevState","color","light","fixed","href","style","width","id","isOpen","navbar","left","exact","to","ChatMessage","sentMessages","timeNow","span","offset","sm","ChatShowingNoMessages","ChatTenderUser","ChatMessagesDisplay","Chat","showCurrentlyTyping","e","userMessage","target","value","sendMessageNow","preventDefault","Date","prevProps","rows","type","classeName","contact","LinkedIn","class","GitHub","ourselves","App","getGenderSelection","getUser","fetch","then","response","json","chuckAPI","url","res","randomUserAPI","selectedUser","results","getUsers","data","usersWithMessages","item","faker","lorem","sentences","handleChangeSetting","settingName","handleSelectUser","clickedUser","nextRoute","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2TAuCeA,G,MAlCK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAYzB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,UAAU,eAC3B,yBAAKA,UAAU,gBACX,8BAAOP,EAAKQ,KAAKC,MAAjB,IAAyBT,EAAKQ,KAAKE,MADvC,MACsD,8BAAOV,EAAKW,IAAIC,IAAhB,cAClD,6BAAM,wBAAIL,UAAU,iBAjBrB,WACf,IAAMM,EAAmBb,EAAKc,YAE1BC,EAAWf,EAAKQ,KAAKC,MACzB,OAAII,EAAiBG,SAFC,gBAGFH,EAAiBI,QAHf,eAGwCF,GAGvDf,EAAKc,YASyCI,KAGhB,gBAApBlB,EAAKQ,KAAKC,OAA4C,YAApBT,EAAKQ,KAAKC,OAAwC,UAApBT,EAAKQ,KAAKC,OAAyC,cAApBT,EAAKQ,KAAKC,OAC1G,oCACI,uBAAGF,UAAU,oBAAoBN,EAASkB,OAAS,WAAa,gBAChE,uBAAGZ,UAAU,oBAAoBN,EAASmB,WAAa,eAAiB,oBACxE,uBAAGb,UAAU,oBAAoBN,EAASoB,OAAS,WAAa,mBCsD7EC,G,OAAAA,aA9EG,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAErBC,EAAUC,cAyCd,OAAGH,EAEK,kBAACpB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,IACb,yBAAKE,UAAU,mBAAmBoB,QAASH,GAC3C,gEAAqC,6BAArC,+BAOR,yBAAKjB,UAAW,WACZ,yBAAKA,UAAW,YACZ,oDACA,yBACIA,UAAU,uBACVqB,IAAI,kCAAkCC,IAAI,iBAGlD,yBAAKtB,UAAU,qBACX,4BAAQA,UAAU,wBACdoB,QA7DS,WACzBF,EAAQK,KAAK,SACbN,MA0DY,yBAGA,4BACIjB,UAAU,oBACVoB,QAASH,GAFb,2BCMLO,G,OAxEF,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,QAAmBC,GAAwB,EAAlCjC,SAAkC,EAAxBiC,cAAclC,EAAU,EAAVA,KAAU,EAErCmC,oBAAS,GAF4B,mBAE5DZ,EAF4D,KAEnDa,EAFmD,OAGjCD,oBAAS,GAHwB,mBAG5DE,EAH4D,KAGjDC,EAHiD,KAK7Dd,EAAgB,WAClBS,IACAK,GAAa,IAGXC,EAAc,WAChB,IAAMC,EAASC,KAAKC,MAAMD,KAAKD,UAC/BJ,IAAaI,GACbF,GAAa,IAgBjB,OACI,oCACI,kBAACpC,EAAA,EAAD,CAAWyC,OAAK,QAGYC,IAApBZ,EAAWxB,MACf,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,IACb,yBAAKE,UAAU,qDACX,yBAAKA,UAAU,cACX,uBAAGA,UAAY8B,EAAY,cAAgB,sBAAwBV,QAASH,IAC5E,uBAAGjB,UAAW8B,EAAY,cAAe,QAAzC,IAAkD,yBAAK9B,UAAU,QAAf,UAAlD,oBAAsG,yBAAKA,UAAU,QAAf,YAEtG,yBAAKA,UAzBzB8B,EACId,EACO,wBAEA,mBAGJ,YAkBgDI,QAAS,kBAAMO,EAAalC,EAAM,aAAa4B,IAAKI,EAAWa,QAAQC,MAAOjB,IAAI,gBACzH,yBAAKtB,UAAU,SACX,uBAAGA,UAAW8B,EAAY,cAAgB,uBAAyBV,QAASY,IAC5E,uBAAGhC,UAAW8B,EAAY,cAAe,QAASV,QAASY,GAA3D,IAAyE,yBAAKhC,UAAU,QAAf,UAAzE,aAAsH,yBAAKA,UAAU,QAAf,eAMtI,kBAACJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,IACb,yBAAKE,UAAW8B,EAAY,cAAe,oBACvC,+BAAKrC,EAAKQ,KAAKC,MAAf,KAAwBT,EAAKW,IAAIC,IAAjC,SAQdyB,GACE,kBAAC,EAAD,CAAWd,QAASA,EAASC,cAAeA,EAAea,UAAWA,O,mBC7CvEU,G,OApBK,SAAC,GAAD,IAAE9C,EAAF,EAAEA,SAAU+C,EAAZ,EAAYA,SAAZ,OAChB,oCACI,yBAAKzC,UAAU,iBACX,uBAAGA,UAAU,gBAAb,WAGA,8BACI,kBAAC0C,EAAA,EAAD,CAAOC,QAAM,EAACC,QAASlD,EAASmD,OAAQJ,SAAU,kBAAMA,EAAS,eAGzE,yBAAKzC,UAAU,WAEf,yBAAKA,UAAU,WACX,uBAAGA,UAAU,gBAAb,SADJ,IAGS,8BAAM,kBAAC0C,EAAA,EAAD,CAAOC,QAAM,EAACC,QAASlD,EAASoD,KAAML,SAAU,kBAAMA,EAAS,gBCsBvEM,EArCE,SAAC,GAA4B,IAA1BrD,EAAyB,EAAzBA,SAAU+C,EAAe,EAAfA,SAC1B,OACI,yBAAKzC,UAAU,sBACX,yBAAKA,UAAU,eACX,uBAAGgD,UAAU,iBAAb,uBAIJ,kBAAC,EAAD,CAAatD,SAAUA,EAAU+C,SAAUA,IAC3C,yBAAKzC,UAAU,WACX,uBAAGA,UAAU,gBAAb,WAGA,8BACI,kBAAC0C,EAAA,EAAD,CAAOC,QAAM,EAACC,QAASlD,EAASkB,OAAQ6B,SAAU,kBAAMA,EAAS,eAGzE,yBAAKzC,UAAU,WACX,uBAAGA,UAAU,gBAAb,eAGA,8BACI,kBAAC0C,EAAA,EAAD,CAAOC,QAAM,EAACC,QAASlD,EAASmB,WAAY4B,SAAU,kBAAMA,EAAS,mBAG7E,yBAAKzC,UAAU,gBACX,uBAAGA,UAAU,gBAAb,WAGA,8BACI,kBAAC0C,EAAA,EAAD,CAAOC,QAAM,EAACC,QAASlD,EAASoB,OAAQ2B,SAAU,kBAAMA,EAAS,iBCDtE1B,G,OAAAA,aA9BC,SAAC,GAAsC,IAApCtB,EAAmC,EAAnCA,KAAMwD,EAA6B,EAA7BA,SAAUtB,EAAmB,EAAnBA,aAW/B,OAEI,yBAAK3B,UAAU,WACX,yBAAKA,UAAU,eAAeoB,QAAS,kBAAMO,EAAalC,EAAM,cAC5D,yBAAK4B,IAAK5B,EAAK6C,QAAQY,UAAW5B,IAAI,cAActB,UAAU,YAElE,yBAAKA,UAAU,eAAeoB,QAAS,kBAAMO,EAAalC,EAAM,cAC3DA,EAAKQ,KAAKC,MADf,IACuBT,EAAKQ,KAAKE,MAEjC,yBAAKH,UAAU,kBAAkBoB,QAAS,kBAAMO,EAAalC,EAAM,WAjB7C,cAAtBwD,EAASE,SACH,GAAN,OAAU1D,EAAK2D,QAAQC,UAAU,EAAG,KAApC,OAGM,GAAN,OAAU5D,EAAK2D,QAAQC,UAAU,EAAG,IAApC,QAgBA,yBAAKrD,UAAU,gBACVP,EAAK6D,KAAO7D,EAAK6D,KAAO,gBCK1BC,E,iLA3BD,IAAD,EACiCC,KAAKC,MAAnCC,EADH,EACGA,YAAa/B,EADhB,EACgBA,aACrB,OACI,yBAAK3B,UAAU,OAEP0D,EAAYC,KAAI,SAAAlE,GACZ,OACI,kBAAC,EAAD,CACIA,KAAMA,EACNmE,IAAKnE,EAAKQ,KAAKC,MACfyB,aAAcA,Y,GAXvBkC,a,OCgDRC,G,kNA/CbC,MAAQ,CACNC,WAAY,I,EAGdC,eAAiB,SAAAD,GAAU,OAAI,WAC7B,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAAEH,WAAaG,EAAUH,aAAeA,EAAaA,EAAa,S,wEAI9F,OACE,6BACE,8BACA,kBAAC,IAAD,CAAWhE,UAAU,eAAeoE,MAAM,uBAAuBC,OAAK,EAACC,MAAM,OAC3E,kBAAC,IAAD,CAAatE,UAAU,cAAcuE,KAAK,KACxC,yBAAKvE,UAAU,cAAcqB,IAAK,kCAAmCmD,MAAO,CAAEC,MAAO,MADvF,UAGA,kBAAC,IAAD,CAAkBzE,UAAU,cAAcoB,QAASoC,KAAKS,eAAe,qBAEvE,kBAAC,IAAD,CAAaS,GAAG,kBAAkBC,OAAQnB,KAAKO,MAAMC,WAAYY,QAAM,GACrE,kBAAC,IAAD,CAAWC,MAAI,GACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY7E,UAAU,YAAYoB,QAASoC,KAAKS,eAAe,mBAAoBa,OAAK,EAACC,GAAG,KAA5F,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY/E,UAAU,YAAYoB,QAASoC,KAAKS,eAAe,mBAAoBa,OAAK,EAACC,GAAG,aAA5F,aAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY/E,UAAU,YAAYoB,QAASoC,KAAKS,eAAe,mBAAoBa,OAAK,EAACC,GAAG,aAA5F,aAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY/E,UAAU,YAAYoB,QAASoC,KAAKS,eAAe,mBAAoBa,OAAK,EAACC,GAAG,SAA5F,kB,GA/BKlB,cCoBNmB,G,cApBK,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,aAA2B,EAAbC,QAEpC,OACI,kBAACvF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKI,UAAW,mBAChB,kBAACH,EAAA,EAAD,CAAMC,GAAI,CAAEqF,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKrF,GAAI,CAAEoF,KAAM,EAAGC,OAAQ,IAC5EH,EAAatB,KAAM,SAAAP,GAAO,OACvB,yBAAKpD,UAAU,4BACX,yBAAKA,UAAU,2BACX,+BAAKoD,EAAL,MAEJ,yBAAKpD,UAAU,+CCDxBsF,G,OAZe,WAE9B,OACI,yBAAKtF,UAAU,mBACX,yBACAA,UAAU,aACVqB,IAAI,kCAAkCC,IAAI,gBAC1C,+DAAoC,6BAApC,sBCaOiE,G,OAlBQ,SAAC,GAAY,IAAX9F,EAAU,EAAVA,KAEzB,OACI,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKI,UAAW,yBAChB,kBAACH,EAAA,EAAD,CAAMC,GAAI,EAAGuF,GAAI,EAAGtF,GAAI,GACZ,6BACI,yBAAKC,UAAU,sBACX,+BAAKP,EAAK2D,QAAV,MAEJ,yBAAKpD,UAAU,yCCOxBwF,EAjBa,SAAC,GAA0B,IAAzBP,EAAwB,EAAxBA,aAAcxF,EAAU,EAAVA,KAExC,OAAGA,EAAK2D,QAEA,oCACA,kBAAC,EAAD,CAAgB3D,KAAMA,IACtB,kBAAC,EAAD,CAAcwF,aAAcA,KAInCA,EAAa,GACH,kBAAC,EAAD,CAAcA,aAAcA,IAE5B,kBAAC,EAAD,O,kOCuDAQ,E,YAnEb,WAAYhC,GAAQ,IAAD,8BACjB,4CAAMA,KASRiC,oBAAsB,SAAAC,GACpB,EAAKzB,SAAS,CAAE0B,YAAaD,EAAEE,OAAOC,SAXrB,EAcnBC,eAAiB,SAAAJ,GACfA,EAAEK,iBACE,EAAKjC,MAAM6B,aACb,EAAK1B,UAAS,SAACH,GACb,O,yVAAO,CAAP,GACKA,EADL,CAEEkB,aAAa,GAAD,mBAAMlB,EAAMkB,cAAZ,CAA0B,CAAClB,EAAM6B,eAC7CV,QAAS,IAAIe,KACbL,YAAa,SAnBnB,EAAK7B,MAAQ,CACX6B,YAAa,GACbX,aAAc,GACdC,QAAS,qBANM,E,gFA4BAgB,GACZ1C,KAAKC,MAAMhE,OAASyG,EAAUzG,MAC/B+D,KAAKU,SAAS,CAAEe,aAAc,O,+BAKlC,OACE,yBAAKjF,UAAU,QAEb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAU0D,YAAaF,KAAKC,MAAMC,YAAa/B,aAAc6B,KAAKC,MAAM9B,gBAG1E,yBAAK3B,UAAU,yBACb,yBAAKA,UAAU,+BACb,kBAAC,EAAD,CAAqBiF,aAAczB,KAAKO,MAAMkB,aAAcC,QAAS1B,KAAKO,MAAMmB,QAASzF,KAAM+D,KAAKC,MAAMhE,QAG5G,0BAAMO,UAAU,iBACd,8BACEA,UAAU,gBACVmG,KAAK,IACLL,MAAOtC,KAAKO,MAAM6B,YAClBnD,SAAUe,KAAKkC,sBACjB,2BACEU,KAAK,SACLpG,UAAU,kBACV8F,MAAM,OACN1E,QAASoC,KAAKuC,wB,GA1DTlC,aCkDJ9C,eAhDC,SAAC,GAAwB,IAAtBtB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjBwB,EAAUC,cAMd,OACI,yBAAKkF,WAAW,qBACZ,yBAAKrG,UAAU,gBACX,yBAAKqB,IAAK5B,EAAK6C,QAAQC,MAAOjB,IAAI,cAActB,UAAU,UAE9D,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACW,gBAApBP,EAAKQ,KAAKC,OAA4C,cAApBT,EAAKQ,KAAKC,OAA6C,YAApBT,EAAKQ,KAAKC,OAAwC,UAApBT,EAAKQ,KAAKC,QAC3G,oCACI,yBAAKF,UAAU,gBACX,6BACI,uBAAGuE,KAAM9E,EAAK6G,QAAQC,SAAUvG,UAAU,eACtC,uBAAGwG,MAAM,0BAGjB,6BACI,uBAAGjC,KAAM9E,EAAK6G,QAAQG,OAAQzG,UAAU,eACpC,uBAAGwG,MAAM,uBAQjC,yBAAKxG,UAAU,uBACX,kBAAC,EAAD,CAAaP,KAAMA,EAAMC,SAAUA,EAAUM,UAAU,yBAE3D,yBAAKA,UAAU,uBACX,4BACIoB,QAlCS,WACzBF,EAAQK,KAAK,WAgCD,0B,0kBC9BpB,IAAMmF,EAAY,CAChB,CACEzG,KAAM,CACJC,MAAO,YACPC,KAAM,UAERmC,QAAS,CACPY,UAAW,kCACXX,MAAO,mCAETa,QAAS,6BACTE,KAAM,SACNgD,QAAS,CACPC,SAAU,uDACVE,OAAQ,8CAEVlG,YAAa,YACbH,IAAK,CACHC,IAAI,KAGR,CACEJ,KAAM,CACJC,MAAO,cACPC,KAAM,QAERmC,QAAS,CACPY,UAAW,kCACXX,MAAO,mCAETa,QAAS,2CACTE,KAAM,UACNgD,QAAS,CACPC,SAAU,4CACVE,OAAQ,mCAEVlG,YAAa,YACbH,IAAK,CACHC,IAAI,KAGR,CACEJ,KAAM,CACJC,MAAO,UACPC,KAAM,YAERmC,QAAS,CACPY,UAAW,kCACXX,MAAO,mCAETa,QAAS,mCACTE,KAAM,SACNgD,QAAS,CACPC,SAAU,8CACVE,OAAQ,gCAEVlG,YAAa,YACbH,IAAK,CACHC,IAAI,KAGR,CACEJ,KAAM,CACJC,MAAO,QACPC,KAAM,UAERmC,QAAS,CACPY,UAAW,kCACXX,MAAO,mCAETa,QAAS,kBACTE,KAAM,SACNgD,QAAS,CACPC,SAAU,gDACVE,OAAQ,oCAEVlG,YAAa,YACbH,IAAK,CACHC,IAAI,MAMJsG,E,YACJ,WAAYlD,GAAQ,IAAD,8BACjB,4CAAMA,KA4BRmD,mBAAqB,WACnB,OAAmC,IAA/B,EAAK7C,MAAMrE,SAASmD,SAAgD,IAA7B,EAAKkB,MAAMrE,SAASoD,KACtD,kBACiC,IAA/B,EAAKiB,MAAMrE,SAASmD,SAAiD,IAA7B,EAAKkB,MAAMrE,SAASoD,KAC9D,eAEA,IAnCQ,EAuCnB+D,QAAU,WAERC,MAAM,2CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAG,gEAA4D,EAAKP,sBAC1EE,MAAMK,GACHJ,MAAK,SAAAK,GAAG,OAAIA,EAAIH,UAChBF,MAAK,SAAAM,GACJ,EAAKnD,SAAS,CACZoD,aAAa,KAAMD,EAAcE,QAAQ,GAA7B,CAAiChH,YAAa2G,EAASpB,iBAjD5D,EAuDnB0B,SAAW,WACTV,MAAM,yCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAU,GACJ,IAAMC,EAAoBD,EAAKF,QAAQ5D,KAAI,SAACgE,GAG1C,OAAO,KAAKA,EAAZ,CAAkBvE,QAFGwE,IAAMC,MAAMC,YAEQvH,YADhBqH,IAAMC,MAAMC,iBAGvC,EAAK5D,SAAS,CACZR,YAAY,GAAD,OAAMgD,EAAN,YAAoBgB,UAjEpB,EAuEnBK,oBAAsB,SAACC,GACrB,EAAK9D,UAAS,SAACH,GACb,OAAO,KACFA,EADL,CAEErE,SAAS,KACJqE,EAAMrE,SADH,eAELsI,GAAejE,EAAMrE,SAASsI,WA7EpB,EAmFnBC,iBAAmB,SAACC,EAAaC,GAC/B,EAAKjE,SAAS,CAAEoD,aAAcY,IAAe,WACvCC,GACF,EAAK1E,MAAMvC,QAAQK,KAAK4G,OAnF5B,EAAKpE,MAAQ,CACXuD,aAAc,CACZhF,QAAS,GACTrC,KAAM,GACNG,IAAK,GACLG,YAAa,IAGfmD,YAAa,GACbhE,SAAU,CACRkB,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACR+B,QAAQ,EACRC,MAAM,IAjBO,E,iFAwBjBU,KAAKqD,UACLrD,KAAKgE,a,+BAkEG,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO1C,OAAK,EAACsD,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,CAAM5G,WAAY,EAAKsC,MAAMuD,aAAc7H,KAAM,EAAKsE,MAAMuD,aAAc3F,aAAc,EAAKsG,iBAAkBvG,QAAS,EAAKmF,QAASnH,SAAU,EAAKqE,MAAMrE,cAC/L,kBAAC,IAAD,CAAOoF,OAAK,EAACsD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,CAAU3I,SAAU,EAAKqE,MAAMrE,SAAU+C,SAAU,EAAKsF,yBACpG,kBAAC,IAAD,CAAOjD,OAAK,EAACsD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,CAAU3E,YAAa,EAAKK,MAAML,YAAa/B,aAAc,EAAKsG,sBAC9G,kBAAC,IAAD,CAAOnD,OAAK,EAACsD,KAAK,QAAQC,OAAQ,kBAChC,kBAAC,EAAD,CACE3E,YAAa,EAAKK,MAAML,YACxBjE,KAAM,EAAKsE,MAAMuD,aACjB3F,aAAc,EAAKsG,sBAEvB,kBAAC,IAAD,CAAOnD,OAAK,EAACsD,KAAK,WAAWC,OAAQ,kBACnC,kBAAC,EAAD,CAAS5I,KAAM,EAAKsE,MAAMuD,aAAc5H,SAAU,EAAKqE,MAAMrE,oB,GA3GvDmE,aAkHH9C,cAAW4F,GCvMN2B,QACW,cAA7BC,OAAOtF,SAASuF,UAEe,UAA7BD,OAAOtF,SAASuF,UAEhBD,OAAOtF,SAASuF,SAASC,MACvB,2D,oBCVNC,IAASL,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJM,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,MAAK,SAAAiC,GACjCA,EAAaC,iB","file":"static/js/main.defb4a87.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport './Profile.css';\n\n\nconst Description = ({ user, settings }) => {\n    const changeName = () => {\n        const valueChucknorris = user.description;\n        let chuckNorrisName = 'Chuck Norris';\n        let userName = user.name.first;\n        if (valueChucknorris.includes(chuckNorrisName)) {\n            const replace = valueChucknorris.replace(chuckNorrisName, userName);\n            return replace\n        }\n        return user.description\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col md={12} xs={12} className=\"description\">\n                    <div className=\"profile-name\">\n                        <span>{user.name.first} {user.name.last}</span> - <span>{user.dob.age} years old</span>\n                        <br /><h4 className=\"profile-quote\">{changeName()}</h4>\n                    </div>\n                    {\n                        (user.name.first !== \"Angélina\" && user.name.first !== \"Inês\" && user.name.first !== \"Elena\" && user.name.first !== \"Alexandra\") &&\n                        <>\n                            <p className=\"profile-settings\">{settings.smoker ? \"-Smoker-\" : \"-Non smoker-\"}</p>\n                            <p className=\"profile-settings\">{settings.vegetarian ? \"-Vegetarian-\" : \"-Non vegetarian-\"}</p>\n                            <p className=\"profile-settings\">{settings.single ? \"-Single-\" : \"-Married-\"}</p>\n                        </>\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Description;","import React from \"react\";\nimport \"./MatchText.css\";\nimport './Home.css';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst MatchText = ({isMatch, handleNewUser}) => {\n\n    let history = useHistory ()\n\n    const handleRedirectToChat = () => {\n        history.push(\"/chat\");\n        handleNewUser()\n    }\n\n    // if(isMatch){\n    //     return (\n    //         <div className =\"isMatch\">\n    //             <div className=\"noMatch\">\n    //                 <h1> Sorry, they don't like you back. <br/> Better luck next time. </h1>\n    //                 <button  \n    //                     className=\"matchText-newUser\"\n    //                     onClick={handleNewUser}\n    //                 > Keep searching </button>\n    //             </div>\n    //         </div>\n    //     )\n    // } else{\n    //     return (\n    //         <div className =\"isMatch\">\n    //             <div className =\"yesMatch\">                    \n    //                 <h1> They like you back </h1>\n    //                 <img\n    //                     className=\"matchText-tenderLogo\" \n    //                     src=\"https://i.imgur.com/LN19krz.png\" alt=\"Tender Logo\">\n    //                 </img>\n    //             </div>\n    //             <div className=\"matchText-yesBtns\">\n    //                 <button className=\"matchText-goToChatBtn\" \n    //                     onClick={handleRedirectToChat}\n    //                 > Send them a message </button>\n    //                 <button \n    //                     className=\"matchText-newUser\"\n    //                     onClick={handleNewUser}\n    //                 > Keep searching  </button>\n    //             </div> \n    //         </div>\n    //     )\n    // }  \n    if(isMatch){\n        return (\n            <Row>\n                <Col xs={12} md={12}>\n                    <div className=\"text-center data\" onClick={handleNewUser}>\n                    <p> Sorry, they don't like you back. <br/> Better luck next time. </p>\n                    </div>\n                </Col>\n            </Row>\n        )\n    } else{\n        return (\n            <div className =\"isMatch\">\n                <div className =\"yesMatch\">                    \n                    <h1> They like you back </h1>\n                    <img\n                        className=\"matchText-tenderLogo\" \n                        src=\"https://i.imgur.com/LN19krz.png\" alt=\"Tender Logo\">\n                    </img>\n                </div>\n                <div className=\"matchText-yesBtns\">\n                    <button className=\"matchText-goToChatBtn\" \n                        onClick={handleRedirectToChat}\n                    > Send them a message </button>\n                    <button \n                        className=\"matchText-newUser\"\n                        onClick={handleNewUser}\n                    > Keep searching  </button>\n                </div> \n            </div>\n        )\n    }  \n\n}\n\nexport default withRouter (MatchText); ","import React, { useState } from 'react';\nimport './Home.css';\nimport Description from './Description';\nimport MatchText from './MatchText';\nimport { isContainer } from 'postcss-selector-parser';\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Home = ({ randomUser, newUser, settings, onSelectUser, user}) => {\n\n    const [isMatch, setIsMatch] = useState(false)\n    const [isDecided, setIsDecided] = useState(false)\n\n    const handleNewUser = () => {\n        newUser();\n        setIsDecided(false);\n    }\n\n    const handleMatch = () => {\n        const random = Math.round(Math.random());\n        setIsMatch(!!random);\n        setIsDecided(true);\n    }\n\n    const handleClassName = () => {\n        if (isDecided) {\n            if (isMatch) {\n                return \"mainImage-transparent\"\n            } else {\n                return \"mainImage-bright\"\n            }\n        } else {\n            return \"mainImage\"\n        }\n    }\n\n\n    return (\n        <>\n            <Container fluid>\n              \n                {\n                    randomUser.name !== undefined &&\n                <Row>\n                    <Col xs={12} md={12}>\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                            <div className=\"arrow left\">\n                                <i className= {isDecided ? \"off-buttons\" : \"fas fa-chevron-left\" } onClick={handleNewUser}></i>\n                                <p className={isDecided ? \"off-buttons\" :\"left\"}> <sub className=\"rose\">&tilde;</sub> Don't love you  <sub className=\"rose\">&tilde;</sub></p>\n                            </div>\n                                <img className={handleClassName()} onClick={() => onSelectUser(user, '/profile')} src={randomUser.picture.large} alt=\"Tender user\" />  \n                            <div className=\"arrow\">    \n                                <i className={isDecided ? \"off-buttons\" : \"fas fa-chevron-right\" } onClick={handleMatch}></i> \n                                <p className={isDecided ? \"off-buttons\" :\"right\"} onClick={handleMatch}> <sub className=\"rose\">&tilde;</sub> Marry me <sub className=\"rose\">&tilde;</sub></p> \n                            </div>  \n                        </div>                                \n                    </Col>\n                </Row>\n}\n                <Row>\n                    <Col xs={12} md={12}>\n                        <div className={isDecided ? \"off-buttons\" :\"text-center name\"}>\n                            <p> {user.name.first}, {user.dob.age} </p>\n                        </div>\n                    </Col>\n                </Row>\n                           \n\n                \n            </Container>\n            { isDecided &&\n                <MatchText isMatch={isMatch} handleNewUser={handleNewUser} isDecided={isDecided}/>\n            }\n        </>\n    )\n}\n\n// The settings props are passed from the parent component (App.js) with \"const Home = ({ randomUser, newUser, chuckNorrisQuote, settings }) => {\" and then they\n// are passed to its child component through the part \"settings={settings}\" in \"<Description chuckNorrisQuote={chuckNorrisQuote} settings={settings} />\"\n\nexport default Home; ","import React from 'react'; \nimport { Radio } from 'semantic-ui-react';\nimport './Settings.css';\nimport './Preferences.css';\n\nconst Preferences = ({settings, onChange}) => (\n    <>\n        <div className=\"first-setting\">\n            <p className=\"settingsItem\">\n                Female:\n            </p>\n            <span>\n                <Radio toggle checked={settings.female} onChange={() => onChange('female')}/>\n            </span>\n        </div>\n        <div className=\"border\">\n        </div>\n        <div className=\"setting\">\n            <p className=\"settingsItem\">\n                Male:\n            </p> <span><Radio toggle checked={settings.male} onChange={() => onChange('male')}/></span>\n        </div>\n    </>\n);\n\nexport default Preferences; ","import React from 'react';\nimport './Settings.css';\nimport Preferences from './Preferences';\nimport { Radio } from 'semantic-ui-react';\n\nconst Settings = ({ settings, onChange }) => {\n    return (\n        <div className=\"settings-container\">\n            <div className=\"looking-for\">\n                <p classname=\"settingsTitle\">\n                    I'm looking for...\n                </p>\n            </div>\n            <Preferences settings={settings} onChange={onChange}/>\n            <div className=\"setting\">\n                <p className=\"settingsItem\">\n                    Smoker:\n                </p>\n                <span>\n                    <Radio toggle checked={settings.smoker} onChange={() => onChange('smoker')}/>\n                </span>\n            </div>\n            <div className=\"setting\">\n                <p className=\"settingsItem\">\n                    Vegetarian:\n                </p>\n                <span>\n                    <Radio toggle checked={settings.vegetarian} onChange={() => onChange('vegetarian')}/>\n                </span>\n            </div>\n            <div className=\"last-setting\">\n                <p className=\"settingsItem\">\n                    Single:\n                </p>\n                <span>\n                    <Radio toggle checked={settings.single} onChange={() => onChange('single')}/>\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings; ","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Message.css';\n\nconst Message = ({ user, location, onSelectUser }) => {\n    const formatMessage = () => {\n\n        if (location.pathname === '/messages') {\n            return `${user.message.substring(0, 130)}...`\n        }\n        else {\n            return `${user.message.substring(0, 15)}...`\n        }\n    }\n\n    return (\n\n        <div className=\"message\">\n            <div className=\"message-pict\" onClick={() => onSelectUser(user, '/profile')}>\n                <img src={user.picture.thumbnail} alt=\"Tender user\" className=\"avatar\" />\n            </div>\n            <div className='message-name' onClick={() => onSelectUser(user, '/profile')}>\n                {user.name.first} {user.name.last}\n            </div>\n            <div className=\"message-content\" onClick={() => onSelectUser(user, '/chat')}>\n                {formatMessage()}\n            </div>\n            <div className=\"message-date\">\n                {user.date ? user.date : \"29 oct.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Message);","\nimport Message from './Message';\nimport React, { Component } from 'react';\nimport './Message.css';\n\nclass Messages extends Component {\n    render() {\n        const { randomUsers, onSelectUser } = this.props\n        return (\n            <div className=\"msg\">\n                {\n                    randomUsers.map(user => {\n                        return (\n                            <Message\n                                user={user}\n                                key={user.name.first}\n                                onSelectUser={onSelectUser}\n                            />\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n\nexport default Messages; ","import React, { Component } from 'react';\nimport { MDBNavbar, NavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBContainer, NavbarBrand }\n  from 'mdbreact';\nimport './NavBar.css';\n\nclass NavBar extends Component {\n  state = {\n    collapseID: ''\n  }\n\n  toggleCollapse = collapseID => () => {\n    this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\n  }\n\n  render() {\n    return (\n      <div>\n        <main>\n        <MDBNavbar className=\"navBarCustom\" color=\"light-blue lighten-3\" light fixed=\"top\">\n          <NavbarBrand className=\"logo-tender\" href=\"/\">\n            <img className=\"logo-tender\" src={\"https://i.imgur.com/LN19krz.png\"} style={{ width: 50 }} />\n            Tender</NavbarBrand>\n          <MDBNavbarToggler className=\"navbar-icon\" onClick={this.toggleCollapse('navbarCollapse1')} />\n\n          <MDBCollapse id=\"navbarCollapse1\" isOpen={this.state.collapseID} navbar>\n            <NavbarNav left>\n              <MDBNavItem>\n                <MDBNavLink className=\"link-menu\" onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/\">Home</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink className=\"link-menu\" onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/settings\">Settings</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink className=\"link-menu\" onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/messages\">Messages</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink className=\"link-menu\" onClick={this.toggleCollapse('navbarCollapse1')} exact to=\"/chat\">Chat</MDBNavLink>\n              </MDBNavItem>\n            </NavbarNav>\n          </MDBCollapse>\n\n        </MDBNavbar>\n        </main>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default NavBar; \n","import React from \"react\"\nimport \"./ChatMessages.css\"\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n\nconst ChatMessage = ({sentMessages, timeNow}) => {\n\nreturn(\n    <Container>\n        <Row className={\"sentMessagesRow\"}>\n        <Col  md={{ span: 4, offset: 8 }} sm={{ span: 5, offset: 7 }} xs={{ span: 8, offset: 4 }} >\n                {sentMessages.map ( message => (\n                    <div className=\"chatMessages-eachMessage\">\n                        <div className=\"chatMessages-newMessage\">\n                            <p> {message} </p>\n                        </div>\n                        <div className=\"chatMessages-spaceBetweenMessages\"></div>\n                    </div>\n                ))}\n            </Col>\n        </Row>\n    </Container>\n\n)\n}\nexport default ChatMessage; ","import React from \"react\";\nimport \"./ChatShowingNoMessages.css\"\n\nconst ChatShowingNoMessages = () => {\n\nreturn(\n    <div className=\"chat-noMessages\">\n        <img\n        className=\"tenderLogo\" \n        src=\"https://i.imgur.com/LN19krz.png\" alt=\"Tender Logo\"></img>\n        <h1> Go ahead, send them a message. <br/> Don't be shy! </h1>\n\n    </div>\n)\n}\nexport default ChatShowingNoMessages; ","import React from \"react\"\nimport \"./ChatTenderUser.css\"\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n\nconst ChatTenderUser = ({user}) => {\n\nreturn(\n    <Container>\n        <Row className={\"tenderUserMessage-Row\"}>\n        <Col  md={4} sm={5} xs={8} >\n                    <div>\n                        <div className=\" tenderUserMessage\">\n                            <p> {user.message} </p>\n                        </div>\n                        <div className=\"tenderUserMessage-spaceBetween\"></div>\n                    </div>\n            </Col>\n        </Row>\n    </Container>\n\n)\n}\nexport default ChatTenderUser; ","import React from \"react\";\nimport ChatMessages from \"./ChatMessages\"; \nimport ChatShowingNoMessages from \"./ChatShowingNoMessages\";\nimport ChatTenderUser from \"./ChatTenderUser\";\n\nconst ChatMessagesDisplay = ({sentMessages, user}) => {\n    \n    if(user.message){ \n        return (\n            <>\n            <ChatTenderUser user={user}/>\n            <ChatMessages sentMessages={sentMessages}/>\n            </>\n        )\n    }else if\n    (sentMessages[0]){\n        return <ChatMessages sentMessages={sentMessages}/> \n    }else{\n        return <ChatShowingNoMessages/>\n    }\n}\n\nexport default ChatMessagesDisplay; ","import React, { Component } from 'react';\nimport './Chat.css';\nimport Messages from \"./Messages\";\nimport ChatMessagesDisplay from \"./ChatMessagesDisplay\"\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userMessage: \"\",\n      sentMessages: [],\n      timeNow: \"still not changed\",\n    };\n  }\n\n  showCurrentlyTyping = e => {\n    this.setState({ userMessage: e.target.value });\n  }\n\n  sendMessageNow = e => {\n    e.preventDefault();\n    if (this.state.userMessage) {\n      this.setState((state) => {\n        return {\n          ...state,\n          sentMessages: [...state.sentMessages, [state.userMessage,  ]],\n          timeNow: new Date(),\n          userMessage: \"\",\n        }\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n      if(this.props.user !== prevProps.user){\n        this.setState({ sentMessages: [] })\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"chat\">\n\n        <div className=\"chat-contacts\">\n          <Messages randomUsers={this.props.randomUsers} onSelectUser={this.props.onSelectUser} />\n        </div>\n\n        <div className=\"chat-spaceForMessages\">\n          <div className=\"chat-spaceForMessagesScroll\">\n            <ChatMessagesDisplay sentMessages={this.state.sentMessages} timeNow={this.state.timeNow} user={this.props.user}/>\n          </div>\n\n          <form className=\"chat-chatForm\">\n            <textarea\n              className=\"chat-textArea\"\n              rows=\"2\"\n              value={this.state.userMessage}\n              onChange={this.showCurrentlyTyping} />\n            <input\n              type=\"submit\"\n              className=\"chat-sendButton\"\n              value=\"Send\"\n              onClick={this.sendMessageNow} />\n          </form>\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Chat; ","import React from 'react';\nimport './Profile.css';\nimport Description from './Description';\nimport { withRouter, useHistory } from \"react-router-dom\";\n\n\n\nconst Profile = ({ user, settings }) => {\n    let history = useHistory()\n\n    const handleRedirectToChat = () => {\n        history.push(\"/chat\");\n    }\n\n    return (\n        <div classeName=\"profile-container\">\n            <div className=\"profile-pict\">\n                <img src={user.picture.large} alt=\"Tender user\" className=\"pict\" />\n            </div>\n            <div className=\"profile-description\">\n                <div className=\"profile-social-links\">\n                    {(user.name.first === \"Angélina\" || user.name.first === \"Alexandra\" || user.name.first === \"Inês\" || user.name.first === \"Elena\") &&\n                        <>\n                            <div className=\"social-links\">\n                                <div>\n                                    <a href={user.contact.LinkedIn} className=\"social-link\">\n                                        <i class=\"fab fa-linkedin-in \"></i>\n                                    </a>\n                                </div>\n                                <div>\n                                    <a href={user.contact.GitHub} className=\"social-link\">\n                                        <i class=\"fab fa-github\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n\n                <div className=\"profile-description\">\n                    <Description user={user} settings={settings} className=\"profile-description\" />\n                </div>\n                <div className=\"profile-goToChatBtn\">\n                    <button\n                        onClick={handleRedirectToChat}\n                    > Send a message </button>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}\n\n\nexport default withRouter(Profile); ","import React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\nimport Settings from './Settings';\nimport Messages from './Messages';\nimport NavBar from './NavBar';\nimport Chat from './Chat';\nimport Profile from './Profile';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport faker from 'faker';\n\n\nconst ourselves = [\n  {\n    name: {\n      first: 'Alexandra',\n      last: 'Santos',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/EkLnHof.jpg',\n      large: 'https://i.imgur.com/fKVgPRR.jpg',\n    },\n    message: 'Hey handsome! How are you?',\n    date: '5 nov.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/alexandrapatriciosantos/',\n      GitHub: 'https://github.com/alexandrapatriciosantos',\n    },\n    description: 'blablabla',\n    dob: {\n      age:25\n    }\n  },\n  {\n    name: {\n      first: 'Angélina',\n      last: 'Riet',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/t4iBPv7.jpg',\n      large: 'https://i.imgur.com/knxzOV6.jpg',\n    },\n    message: 'Voulez-vous coucher avec moi ce soir? ;)',\n    date: '31 oct.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/angelinariet/',\n      GitHub: 'https://github.com/AngelinaRIET',\n    },\n    description: 'blablabla',\n    dob: {\n      age:28\n    }\n  },\n  {\n    name: {\n      first: 'Inês',\n      last: 'Oliveira',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/v7zP5R8.jpg',\n      large: 'https://i.imgur.com/Brhn4Tn.jpg',\n    },\n    message: \"You make my booleans come true!!\",\n    date: '4 nov.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/inesfpoliveira/',\n      GitHub: 'https://github.com/inespisca',\n    },\n    description: 'blablabla',\n    dob: {\n      age:26\n    }\n  },\n  {\n    name: {\n      first: 'Elena',\n      last: 'Ortega',\n    },\n    picture: {\n      thumbnail: 'https://i.imgur.com/p9fIRKM.jpg',\n      large: 'https://i.imgur.com/wuUXt6P.jpg',\n    },\n    message: 'Holà que tal',\n    date: '3 nov.',\n    contact: {\n      LinkedIn: 'https://www.linkedin.com/in/elenaortegabaura/',\n      GitHub: 'https://github.com/eobwebdevelop',\n    },\n    description: 'blablabla',\n    dob: {\n      age:28\n    }\n  },\n\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedUser: {\n        picture: {},\n        name: {},\n        dob: {},\n        description: ''\n\n      },\n      randomUsers: [],\n      settings: {\n        smoker: false,\n        vegetarian: false,\n        single: false,\n        female: true,\n        male: true\n\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.getUsers();\n\n  }\n\n  getGenderSelection = () => {\n    if (this.state.settings.female === true && this.state.settings.male === false) {\n      return '&gender=female'\n    } else if (this.state.settings.female === false && this.state.settings.male === true) {\n      return '&gender=male'\n    } else {\n      return ''\n    }\n  }\n\n  getUser = () => {\n    //get quote at the same time as a new user\n    fetch(\"https://api.chucknorris.io/jokes/random\")\n      .then(response => response.json())\n      .then(chuckAPI => {\n        const url = `https://randomuser.me/api/?inc=gender,name,dob,picture${this.getGenderSelection()}`;\n        fetch(url)\n          .then(res => res.json())\n          .then(randomUserAPI => {\n            this.setState({\n              selectedUser: { ...randomUserAPI.results[0], description: chuckAPI.value },\n            })\n          })\n      })\n  }\n\n  getUsers = () => {\n    fetch(\"https://randomuser.me/api/?results=10\")\n      .then(response => response.json())\n      .then(data => {\n        const usersWithMessages = data.results.map((item) => {\n          const fakerMessage = faker.lorem.sentences();\n          const fakerDescription = faker.lorem.sentences();\n          return { ...item, message: fakerMessage, description: fakerDescription };\n        })\n        this.setState({\n          randomUsers: [...ourselves, ...usersWithMessages],\n        })\n      }\n      )\n  }\n\n  handleChangeSetting = (settingName) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          [settingName]: !state.settings[settingName],\n        }\n      }\n    })\n  };\n\n  handleSelectUser = (clickedUser, nextRoute) => {\n    this.setState({ selectedUser: clickedUser }, () => {\n      if (nextRoute) {\n        this.props.history.push(nextRoute);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home randomUser={this.state.selectedUser} user={this.state.selectedUser} onSelectUser={this.handleSelectUser} newUser={this.getUser} settings={this.state.settings} />} />\n          <Route exact path=\"/settings\" render={() => <Settings settings={this.state.settings} onChange={this.handleChangeSetting} />} />\n          <Route exact path=\"/messages\" render={() => <Messages randomUsers={this.state.randomUsers} onSelectUser={this.handleSelectUser} />} />\n          <Route exact path=\"/chat\" render={() =>\n            <Chat\n              randomUsers={this.state.randomUsers}\n              user={this.state.selectedUser}\n              onSelectUser={this.handleSelectUser} />}\n          />\n          <Route exact path=\"/profile\" render={() =>\n            <Profile user={this.state.selectedUser} settings={this.state.settings} />} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}